AWSTemplateFormatVersion: 2010-09-09
Description: PANW 2023 Immersion Day
Mappings:
  EventBridgeMap:
    EventBridgeRuleNamePrefix:
      Value: prisma-cloud-eb-a-1044395264376985600-*
Parameters:
  PrismaCloudAccessKeyID:
    Type: String
    Description: Access Key ID from Prisma Cloud ServiceRole
    NoEcho: True
  PrismaCloudSecretKey:
    Type: String
    Description: Secret Key from Prisma Cloud ServiceRole
    NoEcho: True
  PrismaCloudComputeURL:
    Type: String
    Description: URL from Compute e.g https://us-east1.cloud.twistlock.com/us-2-xxxxxxx
    Default: "https://us-east1.cloud.twistlock.com/us-2-158256885"
  PrismaCloudAPIURL:
    Type: String
    Description: URL from API e.g https://api.prismacloud.io
    Default: "https://api2.prismacloud.io"
  GitHubUrl:
    Type: String
    Description: URL for GitHub repo i.e. https://github.com/username/repository
    Default: "https://github.com/chanduusc/prisma-codebuild-demo"
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/canonical/ubuntu/server/bionic/stable/current/amd64/hvm/ebs-gp2/ami-id'
  PrismaCloudRoleName:
    Type: String
    Description: >-
      Provide an role ARN name (Example: PrismaCloudRole). Maximum 64 characters
      allowed
    AllowedPattern: '[-_a-zA-Z0-9]+'
    Default: PrismaCloudRole-1044395264376985600
    MaxLength: 64
    MinLength: 1
  ExternalId:
    Description: An External ID
    MinLength: '1'
    Type: String
    Default: '8730822c-67e9-4be9-b3f2-e983eae09911'
  DBClass:
    Description: Database instance class
    Type: String
    Default: db.t2.small
    AllowedValues:
      - db.t1.micro
      - db.m1.small
      - db.m1.medium
      - db.m1.large
      - db.m1.xlarge
      - db.m2.xlarge
      - db.m2.2xlarge
      - db.m2.4xlarge
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.m2.xlarge
      - db.m2.2xlarge
      - db.m2.4xlarge
      - db.cr1.8xlarge
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
    ConstraintDescription: must select a valid database instance type.
  DBName:
    Default: wordpressdb
    Description: The WordPress database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    Default: admin
    Description: The WordPress database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    Default: Password123
    NoEcho: 'true'
    Description: The WordPress database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  DBAllocatedStorage:
    Default: '5'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 5 and 1024Gb.
  WindowsAMI:
    Description: The latest AMI ID for Windows 2016 Core in English
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    AllowedValues:
      - /aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base
      - >-
        /aws/service/ami-windows-latest/Windows_Server-2012-R2_RTM-English-64Bit-Base
      - /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base
      - /aws/service/ami-windows-latest/Windows_Server-2019-English-Core-Base
    Default: /aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base
  AMZNLinuxAMI:
    Description: The latest AMI ID for Amazon Linux 1
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2
  AMZNLinux2AMI:
    Description: The latest AMI ID for Amazon Linux 2
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Join ['-', [ 'cnappdemo',!Ref 'AWS::AccountId']]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false  
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
  AccessKeyParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: Access Key ID 
      Name: tl_user
      Type: String
      Value: !Ref PrismaCloudAccessKeyID
  SecretKeyParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: Secret Key
      Name: tl_pass
      Type: String
      Value: !Ref PrismaCloudSecretKey
  ComputeURLParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: Compute URL
      Name: compute_url
      Type: String
      Value: !Ref PrismaCloudComputeURL
  APIConsoleURLParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: Console URL
      Name: api_console_url
      Type: String
      Value: !Ref PrismaCloudAPIURL
  CodeSecurityCredentialsParameter:
    Type: AWS::SSM::Parameter
    Properties: 
      Description: Code Security Credentials
      Name: bc-api-key
      Type: String
      Value: !Join [ '::', [!Ref PrismaCloudAccessKeyID, !Ref PrismaCloudSecretKey] ]
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodeBuildRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
            - Effect: Allow
              Principal:
                  Service:
                    - codebuild.amazonaws.com
              Action:
                - sts:AssumeRole
      Description: !Sub "IAM Role for ${AWS::StackName}"
      Path: '/'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:*
                  - codebuild:*
                  - logs:*
                  - SSM:*
                  - ecr:*
                  - eks:*
                Resource: '*'
  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:  !Join ['-', [ 'CodeBuild', !Ref 'AWS::AccountId']]
      Description: CodeBuild with GitHub
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        PrivilegedMode: True
        EnvironmentVariables:
          - Name: PRISMA_API_URL
            Value: !Ref PrismaCloudAPIURL
            Type: PLAINTEXT
          - Name: ECR_REPO_PATH
            Value: !Join ['', [ !Ref 'AWS::AccountId', '.dkr.ecr.', !Ref 'AWS::Region', '.amazonaws.com/', 'prisma-ecr']]
            Type: PLAINTEXT
          - Name: ECR_REGISTRY 
            Value: !Join ['', [ !Ref 'AWS::AccountId', '.dkr.ecr.', !Ref 'AWS::Region', '.amazonaws.com']]
            Type: PLAINTEXT

      Source:
        Type: GITHUB
        Location: !Ref GitHubUrl
      TimeoutInMinutes: 10
  CodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codebuild/${CodeBuild}"
      RetentionInDays: 7
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: wrapper-vpc
  MySubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs ''
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: MyVPC
      Tags:
        - Key: Name
          Value: wrapper-subnet1
  MySubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - '1'
        - !GetAZs ''
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: MyVPC
      Tags:
        - Key: Name
          Value: wrapper-subnet2
  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: wrapper-internet-gateway
  MyVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: MyInternetGateway
      VpcId:
        Ref: MyVPC
  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPC
      Tags:
        - Key: Name
          Value: wrapper-route-table
  MyRoute:
    Type: AWS::EC2::Route
    DependsOn: MyVPCGatewayAttachment
    Properties:
      RouteTableId:
        Ref: MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyInternetGateway
  MySubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyRouteTable
      SubnetId:
        Ref: MySubnet1
  MySubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyRouteTable
      SubnetId:
        Ref: MySubnet2
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound traffic to EKS worker nodes
      VpcId:
        Ref: MyVPC
      Tags:
        - Key: Name
          Value: wrapper-security-group
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  MyEC2IAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EC2Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: "MyEC2RolePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:*"
                  - "cloudformation:*"
                  - "ec2:*"
                  - "eks:*"
                  - "ecr:*"
                Resource: "*"
  MyEC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: wrapper-ec2-instance-profile
      Path: /
      Roles: 
       - !Ref MyEC2IAMRole
  MyInstance:
    Type: 'AWS::EC2::Instance'
    Properties: 
      ImageId: !Ref LatestAmiId
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs ''
      SubnetId: !Ref MySubnet1
      IamInstanceProfile: !Ref MyEC2InstanceProfile
      InstanceType: t2.large
      SecurityGroupIds: 
        - !Ref MySecurityGroup
      UserData:
        Fn::Base64: |
            #!/bin/bash -ex
            wget https://raw.githubusercontent.com/chanduusc/prisma-codebuild-demo/main/aws-nodel.sh
            chmod a+x aws-nodel.sh
            ./aws-nodel.sh
  PrismaCloudRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - !Join 
          - ''
          - - 'arn:aws:iam::aws:policy/SecurityAudit'
        - !Join 
          - ''
          - - 'arn:aws:iam::'
            - !Ref 'AWS::AccountId'
            - ':policy/'
            - prisma_cloud_1-1044395264376985600
            - '-'
            - !Ref PrismaCloudRoleName
        - !Join 
          - ''
          - - 'arn:aws:iam::'
            - !Ref 'AWS::AccountId'
            - ':policy/'
            - prisma_cloud_2-1044395264376985600
            - '-'
            - !Ref PrismaCloudRoleName
        - !Join 
          - ''
          - - 'arn:aws:iam::'
            - !Ref 'AWS::AccountId'
            - ':policy/'
            - prisma_cloud_3-1044395264376985600
            - '-'
            - !Ref PrismaCloudRoleName
        - !Join 
          - ''
          - - 'arn:aws:iam::'
            - !Ref 'AWS::AccountId'
            - ':policy/'
            - prisma_cloud_4-1044395264376985600
            - '-'
            - !Ref PrismaCloudRoleName
        - !Join 
          - ''
          - - 'arn:aws:iam::'
            - !Ref 'AWS::AccountId'
            - ':policy/'
            - prisma_cloud_5-1044395264376985600
            - '-'
            - !Ref PrismaCloudRoleName
      MaxSessionDuration: 43200
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - 'arn:aws:iam::188619942792:root'
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': 8730822c-67e9-4be9-b3f2-e983eae09911
      RoleName: !Ref PrismaCloudRoleName
    DependsOn:
      - prismacloud5
      - prismacloud1
      - prismacloud2
      - prismacloud3
      - prismacloud4
  prismacloud1:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Join 
        - ''
        - - prisma_cloud_1-1044395264376985600
          - '-'
          - !Ref PrismaCloudRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PrismaCloudFlowlogs1
            Effect: Allow
            Action:
              - 'logs:GetLogEvents'
            Resource: '*'
          - Sid: PrismaCloudAuditEventsCloudTrail1
            Effect: Allow
            Action:
              - 'cloudtrail:LookupEvents'
            Resource: '*'
          - Sid: PrismaCloudPCCAgentlessSSM6
            Effect: Allow
            Action:
              - 'ssm:GetParameter'
              - 'ssm:GetParameters'
            Resource: '*'
          - Sid: PrismaCloudPCCAgentlessSTS7
            Effect: Allow
            Action:
              - 'sts:DecodeAuthorizationMessage'
              - 'sts:GetCallerIdentity'
            Resource: '*'
          - Sid: PrismaCloudElasticBeanstalk5
            Effect: Allow
            Action:
              - 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:'
                - !Ref 'AWS::Partition'
                - ':s3:::elasticbeanstalk-*/*'
          - Sid: PrismaCloudGuardduty1
            Effect: Allow
            Action:
              - 'guardduty:GetDetector'
              - 'guardduty:GetFindings'
              - 'guardduty:ListDetectors'
              - 'guardduty:ListFindings'
            Resource: '*'
          - Sid: PrismaCloudPCCAgentlessKMSCreateKey10
            Effect: Allow
            Action:
              - 'kms:CreateKey'
              - 'kms:TagResource'
            Condition:
              StringEquals:
                'aws:RequestTag/created-by': prismacloud-agentless-scan
            Resource: '*'
          - Sid: PrismaCloudPCCAgentlessNetworkActions9
            Effect: Allow
            Action:
              - 'ec2:CreateInternetGateway'
              - 'ec2:CreateSubnet'
              - 'ec2:CreateVpc'
            Condition:
              StringEquals:
                'aws:RequestTag/created-by': prismacloud-agentless-scan
            Resource: '*'
          - Sid: PrismaCloudPCCAgentlessKMS5
            Effect: Allow
            Action:
              - 'kms:CreateGrant'
              - 'kms:Decrypt'
              - 'kms:DescribeKey'
              - 'kms:Encrypt'
              - 'kms:GenerateDataKeyWithoutPlaintext'
              - 'kms:ListKeys'
              - 'kms:ReEncryptFrom'
              - 'kms:ReEncryptTo'
            Resource: '*'
          - Sid: PrismaCloudComputeAgentless1
            Effect: Allow
            Action:
              - 'ec2:CreateRoute'
              - 'ec2:DeleteNetworkInterface'
              - 'ec2:DescribeInstanceTypes'
              - 'ec2:DescribeInternetGateways'
              - 'ec2:DescribeNetworkInterfaces'
              - 'ec2:DescribeRouteTables'
              - 'ec2:DescribeVpcs'
            Resource: '*'
          - Sid: PrismaCloudPCCAgentlessServiceLinkedRole4
            Effect: Allow
            Action:
              - 'iam:CreateServiceLinkedRole'
            Condition:
              StringLike:
                'iam:AWSServiceName': spot.amazonaws.com
            Resource:
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':iam::*:role/aws-service-role/spot.amazonaws.com/*'
          - Sid: PrismaCloudBridgecrew1
            Effect: Allow
            Action:
              - 'cloudformation:DescribeStackResources'
              - 'cloudformation:GetTemplate'
              - 'cloudformation:ListStacks'
              - 'lambda:GetEventSourceMapping'
              - 'lambda:GetFunction'
              - 'lambda:GetLayerVersion'
              - 's3:ListBucket'
              - 'sns:GetSubscriptionAttributes'
            Resource: '*'
          - Sid: PrismaCloudEBRuleStatusPermissions2
            Effect: Allow
            Action:
              - 'cloudtrail:DescribeTrails'
              - 'cloudtrail:GetEventSelectors'
              - 'cloudtrail:GetTrailStatus'
              - 'ec2:DescribeRegions'
              - 'events:DescribeApiDestination'
              - 'events:DescribeConnection'
              - 'events:DescribeRule'
              - 'events:ListTargetsByRule'
            Resource: '*'
          - Sid: PrismaCloudConfig4
            Effect: Allow
            Action:
              - 'wafv2:ListTagsForResource'
              - 'wafv2:ListWebACLs'
              - 'workspaces:DescribeIpGroups'
              - 'workspaces:DescribeTags'
              - 'workspaces:DescribeWorkspaceBundles'
              - 'workspaces:DescribeWorkspaceDirectories'
              - 'workspaces:DescribeWorkspaces'
              - 'xray:GetEncryptionConfig'
            Resource: '*'
          - Sid: PrismaCloudInspector1
            Effect: Allow
            Action:
              - 'inspector:DescribeAssessmentTemplates'
              - 'inspector:DescribeFindings'
              - 'inspector:DescribeRulesPackages'
              - 'inspector:ListAssessmentRunAgents'
              - 'inspector:ListAssessmentRuns'
              - 'inspector:ListAssessmentTemplates'
              - 'inspector:ListFindings'
              - 'inspector:ListRulesPackages'
            Resource: '*'
          - Sid: PrismaCloudPCCAgentlessRW3
            Effect: Allow
            Action:
              - 'ec2:CopySnapshot'
              - 'ec2:CreateSnapshot'
              - 'ec2:CreateSnapshots'
              - 'ec2:DescribeInstanceStatus'
              - 'ec2:DescribeInstances'
              - 'ec2:DescribeSecurityGroups'
              - 'ec2:DescribeSnapshots'
              - 'ec2:DescribeSubnets'
              - 'ec2:DescribeVolumes'
              - 'ec2:RunInstances'
              - 'iam:SimulatePrincipalPolicy'
            Resource: '*'
          - Sid: PrismaCloudEBRuleManagementPermissions1
            Effect: Allow
            Action:
              - 'events:DeleteRule'
              - 'events:DisableRule'
              - 'events:EnableRule'
              - 'events:PutRule'
              - 'events:RemoveTargets'
            Resource:
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':events:*:'
                  - !Ref 'AWS::AccountId'
                  - ':rule/'
                  - !FindInMap 
                    - EventBridgeMap
                    - EventBridgeRuleNamePrefix
                    - Value
          - Sid: PrismaCloudPCCAgentlessRM2
            Effect: Allow
            Action:
              - 'ec2:AttachInternetGateway'
              - 'ec2:CreateSubnet'
              - 'ec2:DeleteInternetGateway'
              - 'ec2:DeleteSnapshot'
              - 'ec2:DeleteSubnet'
              - 'ec2:DeleteVpc'
              - 'ec2:DetachInternetGateway'
              - 'ec2:ModifySnapshotAttribute'
              - 'ec2:TerminateInstances'
            Condition:
              StringEquals:
                'ec2:ResourceTag/created-by': prismacloud-agentless-scan
            Resource: '*'
  prismacloud2:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Join 
        - ''
        - - prisma_cloud_2-1044395264376985600
          - '-'
          - !Ref PrismaCloudRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PrismaCloudPCCAgentlessTags8
            Effect: Allow
            Action:
              - 'ec2:CreateTags'
            Condition:
              StringEquals:
                'aws:RequestTag/created-by': prismacloud-agentless-scan
            Resource:
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':ec2:*::snapshot/*'
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':ec2:*:*:instance/*'
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':ec2:*:*:vpc/*'
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':ec2:*:*:subnet/*'
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':ec2:*:*:internet-gateway/*'
              - !Join 
                - ''
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':ec2:*:*:volume/*'
          - Sid: PrismaCloudRemediation1
            Effect: Allow
            Action:
              - 'acm:UpdateCertificateOptions'
              - 'cloudtrail:StartLogging'
              - 'cloudtrail:UpdateTrail'
              - 'ec2:ModifyImageAttribute'
              - 'ec2:ModifySnapshotAttribute'
              - 'ec2:ModifySubnetAttribute'
              - 'ec2:RevokeSecurityGroupEgress'
              - 'ec2:RevokeSecurityGroupIngress'
              - 'ecs:UpdateClusterSettings'
              - 'eks:UpdateClusterConfig'
              - 'elasticache:ModifyReplicationGroup'
              - 'elasticloadbalancing:ModifyLoadBalancerAttributes'
              - 'iam:UpdateAccountPasswordPolicy'
              - 'kms:EnableKeyRotation'
              - 'lambda:UpdateFunctionConfiguration'
              - 'rds:ModifyDBCluster'
              - 'rds:ModifyDBClusterSnapshotAttribute'
              - 'rds:ModifyDBInstance'
              - 'rds:ModifyDBSnapshotAttribute'
              - 'rds:ModifyEventSubscription'
              - 'redshift:ModifyCluster'
              - 's3:PutBucketAcl'
              - 's3:PutBucketPublicAccessBlock'
              - 's3:PutBucketVersioning'
            Resource: '*'
          - Sid: PrismaCloudComputeDiscovery1
            Effect: Allow
            Action:
              - 'apigateway:GET'
              - 'cloudfront:ListDistributions'
              - 'cloudwatch:DescribeAlarms'
              - 'ec2:DescribeTags'
              - 'elasticloadbalancing:DescribeListenerCertificates'
              - 'elasticloadbalancing:DescribeListeners'
              - 'elasticloadbalancing:DescribeRules'
              - 'elasticloadbalancing:DescribeTargetGroups'
              - 'events:ListRules'
              - 'iam:GetPolicy'
              - 'iam:GetPolicyVersion'
              - 'iam:GetRole'
              - 'iam:GetRolePolicy'
              - 'iam:ListAttachedRolePolicies'
              - 'iam:ListRolePolicies'
              - 'kms:Decrypt'
              - 'lambda:GetFunction'
              - 'lambda:GetFunctionConfiguration'
              - 'lambda:GetFunctionUrlConfig'
              - 'lambda:GetPolicy'
              - 'lambda:ListAliases'
              - 'lambda:ListEventSourceMappings'
              - 'lambda:ListFunctions'
              - 'logs:DescribeSubscriptionFilters'
              - 's3:GetBucketNotification'
              - 'secretsmanager:GetSecretValue'
              - 'ssm:GetParameter'
            Resource: '*'
  prismacloud3:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Join 
        - ''
        - - prisma_cloud_3-1044395264376985600
          - '-'
          - !Ref PrismaCloudRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PrismaCloudConfig1
            Effect: Allow
            Action:
              - 'access-analyzer:GetAnalyzer'
              - 'access-analyzer:ListAnalyzers'
              - 'account:GetAlternateContact'
              - 'acm-pca:GetPolicy'
              - 'acm-pca:ListCertificateAuthorities'
              - 'acm-pca:ListTags'
              - 'acm:DescribeCertificate'
              - 'acm:ListCertificates'
              - 'acm:ListTagsForCertificate'
              - 'airflow:GetEnvironment'
              - 'airflow:ListEnvironments'
              - 'amplify:ListApps'
              - 'apigateway:GET'
              - 'appflow:DescribeFlow'
              - 'appflow:ListFlows'
              - 'appmesh:DescribeMesh'
              - 'appmesh:DescribeVirtualGateway'
              - 'appmesh:ListMeshes'
              - 'appmesh:ListTagsForResource'
              - 'appmesh:ListVirtualGateways'
              - 'apprunner:DescribeAutoScalingConfiguration'
              - 'apprunner:DescribeCustomDomains'
              - 'apprunner:DescribeService'
              - 'apprunner:ListAutoScalingConfigurations'
              - 'apprunner:ListServices'
              - 'apprunner:ListTagsForResource'
              - 'appstream:DescribeFleets'
              - 'appstream:DescribeImages'
              - 'appstream:DescribeStacks'
              - 'appstream:DescribeUsageReportSubscriptions'
              - 'appstream:ListTagsForResource'
              - 'appsync:GetGraphqlApi'
              - 'appsync:ListGraphqlApis'
              - 'aps:DescribeLoggingConfiguration'
              - 'aps:ListWorkspaces'
              - 'athena:GetWorkGroup'
              - 'athena:ListWorkGroups'
              - 'autoscaling:DescribeAutoScalingGroups'
              - 'autoscaling:DescribeLaunchConfigurations'
              - 'backup:GetBackupVaultAccessPolicy'
              - 'backup:ListBackupVaults'
              - 'backup:ListTags'
              - 'batch:DescribeComputeEnvironments'
              - 'chime:GetVoiceConnectorLoggingConfiguration'
              - 'chime:ListVoiceConnectors'
              - 'cloud9:DescribeEnvironmentMemberships'
              - 'cloud9:DescribeEnvironments'
              - 'cloud9:ListEnvironments'
              - 'cloud9:ListTagsForResource'
              - 'cloudformation:DescribeStackResources'
              - 'cloudformation:DescribeStacks'
              - 'cloudformation:GetStackPolicy'
              - 'cloudformation:GetTemplate'
              - 'cloudformation:ListStackResources'
              - 'cloudformation:ListStacks'
              - 'cloudfront:GetDistribution'
              - 'cloudfront:GetDistributionConfig'
              - 'cloudfront:ListDistributions'
              - 'cloudfront:ListOriginAccessControls'
              - 'cloudfront:ListTagsForResource'
              - 'cloudsearch:DescribeDomains'
              - 'cloudtrail:DescribeTrails'
              - 'cloudtrail:GetEventSelectors'
              - 'cloudtrail:GetTrailStatus'
              - 'cloudtrail:ListTags'
              - 'cloudwatch:DescribeAlarms'
              - 'cloudwatch:DescribeInsightRules'
              - 'cloudwatch:ListTagsForResource'
              - 'codeartifact:DescribeDomain'
              - 'codeartifact:DescribeRepository'
              - 'codeartifact:GetDomainPermissionsPolicy'
              - 'codeartifact:GetRepositoryPermissionsPolicy'
              - 'codeartifact:ListDomains'
              - 'codeartifact:ListRepositories'
              - 'codeartifact:ListTagsForResource'
              - 'codebuild:BatchGetProjects'
              - 'codebuild:ListProjects'
              - 'codepipeline:GetPipeline'
              - 'codepipeline:ListPipelines'
              - 'codepipeline:ListTagsForResource'
              - 'cognito-identity:DescribeIdentityPool'
              - 'cognito-identity:ListIdentityPools'
              - 'cognito-identity:ListTagsForResource'
              - 'cognito-idp:ListResourcesForWebACL'
              - 'cognito-idp:ListTagsForResource'
              - 'cognito-idp:ListUserPools'
              - 'cognito-sync:ListIdentityPoolUsage'
              - 'comprehend:ListEntitiesDetectionJobs'
              - 'comprehendmedical:ListEntitiesDetectionV2Jobs'
              - 'config:DescribeConfigRules'
              - 'config:DescribeConfigurationRecorderStatus'
              - 'config:DescribeConfigurationRecorders'
              - 'config:DescribeDeliveryChannels'
              - 'config:GetComplianceDetailsByConfigRule'
              - 'config:ListTagsForResource'
              - 'connect:ListInstanceAttributes'
              - 'connect:ListInstanceStorageConfigs'
              - 'connect:ListInstances'
              - 'databrew:DescribeJob'
              - 'databrew:ListJobs'
              - 'datapipeline:DescribePipelines'
              - 'datapipeline:GetPipelineDefinition'
              - 'datapipeline:ListPipelines'
              - 'datasync:DescribeLocationEfs'
              - 'datasync:DescribeLocationFsxLustre'
              - 'datasync:DescribeLocationFsxOntap'
              - 'datasync:DescribeLocationFsxOpenZfs'
              - 'datasync:DescribeLocationFsxWindows'
              - 'datasync:DescribeLocationHdfs'
              - 'datasync:DescribeLocationNfs'
              - 'datasync:DescribeLocationObjectStorage'
              - 'datasync:DescribeLocationS3'
              - 'datasync:DescribeLocationSmb'
              - 'datasync:ListLocations'
              - 'datasync:ListTagsForResource'
              - 'datasync:ListTasks'
              - 'dax:DescribeClusters'
              - 'dax:ListTags'
              - 'devicefarm:ListProjects'
              - 'devops-guru:DescribeServiceIntegration'
              - 'directconnect:DescribeConnections'
              - 'directconnect:DescribeDirectConnectGateways'
              - 'directconnect:DescribeVirtualInterfaces'
              - 'dms:DescribeCertificates'
              - 'dms:DescribeEndpoints'
              - 'dms:DescribeReplicationInstances'
              - 'dms:ListTagsForResource'
              - 'ds:DescribeDirectories'
              - 'ds:ListTagsForResource'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:ListTables'
              - 'dynamodb:ListTagsOfResource'
              - 'ec2:DescribeAccountAttributes'
              - 'ec2:DescribeAddresses'
              - 'ec2:DescribeClientVpnAuthorizationRules'
              - 'ec2:DescribeClientVpnEndpoints'
              - 'ec2:DescribeDhcpOptions'
              - 'ec2:DescribeFlowLogs'
              - 'ec2:DescribeImages'
              - 'ec2:DescribeInstanceAttribute'
              - 'ec2:DescribeInstanceStatus'
              - 'ec2:DescribeInstances'
              - 'ec2:DescribeInternetGateways'
              - 'ec2:DescribeKeyPairs'
              - 'ec2:DescribeManagedPrefixLists'
              - 'ec2:DescribeNatGateways'
              - 'ec2:DescribeNetworkAcls'
              - 'ec2:DescribeNetworkInterfaceAttribute'
              - 'ec2:DescribeNetworkInterfaces'
              - 'ec2:DescribeRegions'
              - 'ec2:DescribeRouteTables'
              - 'ec2:DescribeSecurityGroups'
              - 'ec2:DescribeSnapshotAttribute'
              - 'ec2:DescribeSnapshots'
              - 'ec2:DescribeSubnets'
              - 'ec2:DescribeTags'
              - 'ec2:DescribeTransitGatewayAttachments'
              - 'ec2:DescribeTransitGatewayRouteTables'
              - 'ec2:DescribeTransitGatewayVpcAttachments'
              - 'ec2:DescribeTransitGateways'
              - 'ec2:DescribeVolumes'
              - 'ec2:DescribeVpcEndpointServiceConfigurations'
              - 'ec2:DescribeVpcEndpointServices'
              - 'ec2:DescribeVpcEndpoints'
              - 'ec2:DescribeVpcPeeringConnections'
              - 'ec2:DescribeVpcs'
              - 'ec2:DescribeVpnConnections'
              - 'ec2:DescribeVpnGateways'
              - 'ec2:GetEbsEncryptionByDefault'
              - 'ec2:GetManagedPrefixListEntries'
              - 'ec2:SearchTransitGatewayRoutes'
              - 'ecr-public:DescribeRepositories'
              - 'ecr-public:GetRepositoryCatalogData'
              - 'ecr-public:GetRepositoryPolicy'
              - 'ecr-public:ListTagsForResource'
              - 'ecr:DescribeImages'
              - 'ecr:DescribePullThroughCacheRules'
              - 'ecr:DescribeRegistry'
              - 'ecr:DescribeRepositories'
              - 'ecr:GetLifecyclePolicy'
            Resource: '*'
  prismacloud4:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Join 
        - ''
        - - prisma_cloud_4-1044395264376985600
          - '-'
          - !Ref PrismaCloudRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PrismaCloudConfig2
            Effect: Allow
            Action:
              - 'ecr:GetRegistryPolicy'
              - 'ecr:GetRegistryScanningConfiguration'
              - 'ecr:GetRepositoryPolicy'
              - 'ecr:ListTagsForResource'
              - 'ecs:DescribeClusters'
              - 'ecs:DescribeContainerInstances'
              - 'ecs:DescribeServices'
              - 'ecs:DescribeTaskDefinition'
              - 'ecs:DescribeTasks'
              - 'ecs:ListClusters'
              - 'ecs:ListContainerInstances'
              - 'ecs:ListServices'
              - 'ecs:ListTagsForResource'
              - 'ecs:ListTaskDefinitions'
              - 'ecs:ListTasks'
              - 'eks:DescribeCluster'
              - 'eks:DescribeFargateProfile'
              - 'eks:DescribeNodegroup'
              - 'eks:ListClusters'
              - 'eks:ListFargateProfiles'
              - 'eks:ListNodegroups'
              - 'eks:ListTagsForResource'
              - 'elasticache:DescribeCacheClusters'
              - 'elasticache:DescribeCacheEngineVersions'
              - 'elasticache:DescribeCacheSubnetGroups'
              - 'elasticache:DescribeReplicationGroups'
              - 'elasticache:DescribeReservedCacheNodes'
              - 'elasticache:DescribeSnapshots'
              - 'elasticache:ListTagsForResource'
              - 'elasticbeanstalk:DescribeApplications'
              - 'elasticbeanstalk:DescribeConfigurationSettings'
              - 'elasticbeanstalk:DescribeEnvironmentResources'
              - 'elasticbeanstalk:DescribeEnvironments'
              - 'elasticbeanstalk:ListTagsForResource'
              - 'elasticfilesystem:DescribeFileSystemPolicy'
              - 'elasticfilesystem:DescribeFileSystems'
              - 'elasticfilesystem:DescribeMountTargetSecurityGroups'
              - 'elasticfilesystem:DescribeMountTargets'
              - 'elasticfilesystem:DescribeTags'
              - 'elasticloadbalancing:DescribeListeners'
              - 'elasticloadbalancing:DescribeLoadBalancerAttributes'
              - 'elasticloadbalancing:DescribeLoadBalancerPolicies'
              - 'elasticloadbalancing:DescribeLoadBalancers'
              - 'elasticloadbalancing:DescribeSSLPolicies'
              - 'elasticloadbalancing:DescribeTags'
              - 'elasticloadbalancing:DescribeTargetGroups'
              - 'elasticloadbalancing:DescribeTargetHealth'
              - 'elasticmapreduce:DescribeCluster'
              - 'elasticmapreduce:DescribeSecurityConfiguration'
              - 'elasticmapreduce:GetBlockPublicAccessConfiguration'
              - 'elasticmapreduce:ListClusters'
              - 'elasticmapreduce:ListSecurityConfigurations'
              - 'elastictranscoder:ListPipelines'
              - 'es:DescribeElasticsearchDomains'
              - 'es:ListDomainNames'
              - 'es:ListTags'
              - 'events:ListEventBuses'
              - 'events:ListRules'
              - 'events:ListTagsForResource'
              - 'events:ListTargetsByRule'
              - 'firehose:DescribeDeliveryStream'
              - 'firehose:ListDeliveryStreams'
              - 'firehose:ListTagsForDeliveryStream'
              - 'fms:GetAdminAccount'
              - 'fms:GetPolicy'
              - 'fms:ListComplianceStatus'
              - 'fms:ListPolicies'
              - 'forecast:DescribeAutoPredictor'
              - 'forecast:DescribeDataset'
              - 'forecast:DescribePredictor'
              - 'forecast:ListDatasets'
              - 'forecast:ListPredictors'
              - 'forecast:ListTagsForResource'
              - 'fsx:DescribeFileSystems'
              - 'glacier:GetVaultAccessPolicy'
              - 'glacier:GetVaultLock'
              - 'glacier:ListTagsForVault'
              - 'glacier:ListVaults'
              - 'globalaccelerator:DescribeAcceleratorAttributes'
              - 'globalaccelerator:ListAccelerators'
              - 'globalaccelerator:ListTagsForResource'
              - 'glue:GetConnection'
              - 'glue:GetConnections'
              - 'glue:GetDataCatalogEncryptionSettings'
              - 'glue:GetDatabases'
              - 'glue:GetSecurityConfigurations'
              - 'grafana:DescribeWorkspace'
              - 'grafana:DescribeWorkspaceAuthentication'
              - 'grafana:ListWorkspaces'
              - 'greengrass:ListCoreDefinitions'
              - 'greengrass:ListGroups'
              - 'guardduty:GetDetector'
              - 'guardduty:GetFindings'
              - 'guardduty:GetMasterAccount'
              - 'guardduty:ListDetectors'
              - 'guardduty:ListFindings'
              - 'iam:GenerateCredentialReport'
              - 'iam:GenerateServiceLastAccessedDetails'
              - 'iam:GetAccountAuthorizationDetails'
              - 'iam:GetAccountPasswordPolicy'
              - 'iam:GetAccountSummary'
              - 'iam:GetCredentialReport'
              - 'iam:GetGroupPolicy'
              - 'iam:GetOpenIDConnectProvider'
              - 'iam:GetPolicyVersion'
              - 'iam:GetRole'
              - 'iam:GetRolePolicy'
              - 'iam:GetSAMLProvider'
              - 'iam:GetServiceLastAccessedDetails'
              - 'iam:GetUserPolicy'
              - 'iam:ListAccessKeys'
              - 'iam:ListAttachedGroupPolicies'
              - 'iam:ListAttachedRolePolicies'
              - 'iam:ListAttachedUserPolicies'
              - 'iam:ListEntitiesForPolicy'
              - 'iam:ListGroupPolicies'
              - 'iam:ListGroups'
              - 'iam:ListGroupsForUser'
              - 'iam:ListInstanceProfilesForRole'
              - 'iam:ListMFADeviceTags'
              - 'iam:ListMFADevices'
              - 'iam:ListOpenIDConnectProviders'
              - 'iam:ListPolicies'
              - 'iam:ListPolicyTags'
              - 'iam:ListPolicyVersions'
              - 'iam:ListRolePolicies'
              - 'iam:ListRoleTags'
              - 'iam:ListRoles'
              - 'iam:ListSAMLProviderTags'
              - 'iam:ListSAMLProviders'
              - 'iam:ListSSHPublicKeys'
              - 'iam:ListServerCertificateTags'
              - 'iam:ListServerCertificates'
              - 'iam:ListUserPolicies'
              - 'iam:ListUserTags'
              - 'iam:ListUsers'
              - 'iam:ListVirtualMFADevices'
              - 'identitystore:ListGroupMemberships'
              - 'identitystore:ListGroups'
              - 'identitystore:ListUsers'
              - 'inspector:DescribeAssessmentTemplates'
              - 'inspector:DescribeFindings'
              - 'inspector:DescribeRulesPackages'
              - 'inspector:ListAssessmentRunAgents'
              - 'inspector:ListAssessmentRuns'
              - 'inspector:ListAssessmentTemplates'
              - 'inspector:ListFindings'
              - 'inspector:ListRulesPackages'
              - 'iot:DescribeAccountAuditConfiguration'
              - 'iot:DescribeDomainConfiguration'
              - 'iot:ListDomainConfigurations'
              - 'iot:ListTagsForResource'
              - 'iotanalytics:ListChannels'
              - 'iotanalytics:ListDatastores'
              - 'iotanalytics:ListTagsForResource'
              - 'iotevents:ListInputs'
              - 'iotfleetwise:ListSignalCatalogs'
              - 'kafka:ListClusters'
              - 'kendra:DescribeIndex'
              - 'kendra:ListTagsForResource'
              - 'kinesis:DescribeStream'
              - 'kinesis:ListStreams'
              - 'kinesis:ListTagsForStream'
              - 'kinesisanalytics:DescribeApplication'
              - 'kinesisanalytics:ListApplications'
              - 'kinesisanalytics:ListTagsForResource'
              - 'kinesisvideo:DescribeNotificationConfiguration'
              - 'kinesisvideo:ListStreams'
              - 'kinesisvideo:ListTagsForStream'
              - 'kms:DescribeKey'
              - 'kms:GetKeyPolicy'
              - 'kms:GetKeyRotationStatus'
              - 'kms:ListAliases'
              - 'kms:ListKeyPolicies'
              - 'kms:ListKeys'
              - 'kms:ListResourceTags'
              - 'lakeformation:GetDataLakeSettings'
              - 'lambda:GetFunctionUrlConfig'
              - 'lambda:GetLayerVersionPolicy'
              - 'lambda:GetPolicy'
              - 'lambda:ListCodeSigningConfigs'
              - 'lambda:ListFunctions'
              - 'lambda:ListLayerVersions'
              - 'lambda:ListLayers'
              - 'lambda:ListTags'
              - 'lex:DescribeBot'
              - 'lex:DescribeBotVersion'
              - 'lex:GetBot'
              - 'lex:GetBotVersions'
              - 'lex:GetBots'
            Resource: '*'
  prismacloud5:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Join 
        - ''
        - - prisma_cloud_5-1044395264376985600
          - '-'
          - !Ref PrismaCloudRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PrismaCloudConfig3
            Effect: Allow
            Action:
              - 'lex:ListBotVersions'
              - 'lex:ListBots'
              - 'lex:ListTagsForResource'
              - 'lightsail:GetInstances'
              - 'logs:DescribeLogGroups'
              - 'logs:DescribeLogStreams'
              - 'logs:DescribeMetricFilters'
              - 'logs:DescribeSubscriptionFilters'
              - 'logs:GetLogEvents'
              - 'logs:ListTagsLogGroup'
              - 'lookoutequipment:ListDatasets'
              - 'lookoutmetrics:ListAnomalyDetectors'
              - 'lookoutvision:ListProjects'
              - 'macie2:GetClassificationExportConfiguration'
              - 'macie2:GetFindingsPublicationConfiguration'
              - 'macie2:GetMacieSession'
              - 'macie2:GetRevealConfiguration'
              - 'managedblockchain:ListNetworks'
              - 'mediastore:GetContainerPolicy'
              - 'mediastore:GetCorsPolicy'
              - 'mediastore:ListContainers'
              - 'mediastore:ListTagsForResource'
              - 'memorydb:DescribeClusters'
              - 'memorydb:DescribeParameterGroups'
              - 'memorydb:DescribeParameters'
              - 'memorydb:ListTags'
              - 'mobiletargeting:GetApps'
              - 'mobiletargeting:GetEmailChannel'
              - 'mobiletargeting:GetSmsChannel'
              - 'mq:DescribeBroker'
              - 'mq:ListBrokers'
              - 'network-firewall:DescribeFirewall'
              - 'network-firewall:DescribeFirewallPolicy'
              - 'network-firewall:DescribeResourcePolicy'
              - 'network-firewall:ListFirewallPolicies'
              - 'network-firewall:ListFirewalls'
              - 'opsworks:DescribeUserProfiles'
              - 'organizations:DescribeAccount'
              - 'organizations:DescribeOrganization'
              - 'polly:DescribeVoices'
              - 'qldb:DescribeLedger'
              - 'qldb:ListLedgers'
              - 'qldb:ListTagsForResource'
              - 'quicksight:DescribeAccountSettings'
              - 'quicksight:ListDataSets'
              - 'quicksight:ListDataSources'
              - 'quicksight:ListTagsForResource'
              - 'ram:GetResourceShares'
              - 'ram:ListPrincipals'
              - 'ram:ListResources'
              - 'rds:DescribeDBClusterParameterGroups'
              - 'rds:DescribeDBClusterParameters'
              - 'rds:DescribeDBClusterSnapshotAttributes'
              - 'rds:DescribeDBClusterSnapshots'
              - 'rds:DescribeDBClusters'
              - 'rds:DescribeDBInstances'
              - 'rds:DescribeDBParameterGroups'
              - 'rds:DescribeDBParameters'
              - 'rds:DescribeDBSnapshotAttributes'
              - 'rds:DescribeDBSnapshots'
              - 'rds:DescribeEventSubscriptions'
              - 'rds:DescribeOptionGroups'
              - 'rds:ListTagsForResource'
              - 'redshift:DescribeClusterParameters'
              - 'redshift:DescribeClusters'
              - 'redshift:DescribeLoggingStatus'
              - 'resiliencehub:ListApps'
              - 'route53:ListHostedZones'
              - 'route53:ListQueryLoggingConfigs'
              - 'route53:ListResourceRecordSets'
              - 'route53:ListTagsForResource'
              - 'route53domains:GetDomainDetail'
              - 'route53domains:ListDomains'
              - 'route53domains:ListTagsForDomain'
              - 'route53resolver:ListResolverQueryLogConfigAssociations'
              - 'route53resolver:ListResolverQueryLogConfigs'
              - 'route53resolver:ListTagsForResource'
              - 's3:DescribeJob'
              - 's3:GetAccessPoint'
              - 's3:GetAccessPointPolicy'
              - 's3:GetAccessPointPolicyStatus'
              - 's3:GetAccountPublicAccessBlock'
              - 's3:GetBucketAcl'
              - 's3:GetBucketCORS'
              - 's3:GetBucketLocation'
              - 's3:GetBucketLogging'
              - 's3:GetBucketOwnershipControls'
              - 's3:GetBucketPolicy'
              - 's3:GetBucketPolicyStatus'
              - 's3:GetBucketPublicAccessBlock'
              - 's3:GetBucketTagging'
              - 's3:GetBucketVersioning'
              - 's3:GetBucketWebsite'
              - 's3:GetEncryptionConfiguration'
              - 's3:GetJobTagging'
              - 's3:GetLifecycleConfiguration'
              - 's3:GetReplicationConfiguration'
              - 's3:ListAccessPoints'
              - 's3:ListAllMyBuckets'
              - 's3:ListJobs'
              - 'sagemaker:DescribeDomain'
              - 'sagemaker:DescribeEndpoint'
              - 'sagemaker:DescribeEndpointConfig'
              - 'sagemaker:DescribeModel'
              - 'sagemaker:DescribeNotebookInstance'
              - 'sagemaker:DescribeTrainingJob'
              - 'sagemaker:DescribeUserProfile'
              - 'sagemaker:ListDomains'
              - 'sagemaker:ListEndpointConfigs'
              - 'sagemaker:ListEndpoints'
              - 'sagemaker:ListModels'
              - 'sagemaker:ListNotebookInstances'
              - 'sagemaker:ListTags'
              - 'sagemaker:ListTrainingJobs'
              - 'sagemaker:ListUserProfiles'
              - 'secretsmanager:DescribeSecret'
              - 'secretsmanager:GetResourcePolicy'
              - 'secretsmanager:ListSecrets'
              - 'securityhub:DescribeStandards'
              - 'securityhub:GetEnabledStandards'
              - 'servicecatalog:ListApplications'
              - 'servicecatalog:ListAttributeGroups'
              - 'servicecatalog:ListPortfolios'
              - 'servicediscovery:ListNamespaces'
              - 'ses:GetIdentityDkimAttributes'
              - 'ses:GetIdentityPolicies'
              - 'ses:ListIdentities'
              - 'ses:ListIdentityPolicies'
              - 'shield:GetSubscriptionState'
              - 'shield:ListProtectionGroups'
              - 'shield:ListProtections'
              - 'shield:ListResourcesInProtectionGroup'
              - 'shield:ListTagsForResource'
              - 'sns:GetTopicAttributes'
              - 'sns:ListPlatformApplications'
              - 'sns:ListSubscriptions'
              - 'sns:ListTagsForResource'
              - 'sns:ListTopics'
              - 'sqs:GetQueueAttributes'
              - 'sqs:ListQueueTags'
              - 'sqs:ListQueues'
              - 'ssm:DescribeAssociation'
              - 'ssm:DescribeDocument'
              - 'ssm:DescribeDocumentPermission'
              - 'ssm:DescribeInstanceInformation'
              - 'ssm:DescribeParameters'
              - 'ssm:GetDocument'
              - 'ssm:GetInventory'
              - 'ssm:GetParameters'
              - 'ssm:ListAssociations'
              - 'ssm:ListDocuments'
              - 'ssm:ListResourceComplianceSummaries'
              - 'ssm:ListTagsForResource'
              - 'sso:DescribePermissionSet'
              - 'sso:ListAccountAssignments'
              - 'sso:ListAccountsForProvisionedPermissionSet'
              - 'sso:ListInstances'
              - 'sso:ListPermissionSets'
              - 'states:DescribeStateMachine'
              - 'states:ListStateMachines'
              - 'states:ListTagsForResource'
              - 'storagegateway:DescribeCachediSCSIVolumes'
              - 'storagegateway:DescribeGatewayInformation'
              - 'storagegateway:DescribeNFSFileShares'
              - 'storagegateway:DescribeSMBFileShares'
              - 'storagegateway:DescribeSMBSettings'
              - 'storagegateway:DescribeTapes'
              - 'storagegateway:ListFileShares'
              - 'storagegateway:ListGateways'
              - 'storagegateway:ListTapes'
              - 'storagegateway:ListVolumes'
              - 'swf:ListDomains'
              - 'transcribe:ListLanguageModels'
              - 'transcribe:ListTagsForResource'
              - 'transfer:DescribeAccess'
              - 'transfer:DescribeServer'
              - 'transfer:ListAccesses'
              - 'transfer:ListServers'
              - 'translate:GetTerminology'
              - 'translate:ListTerminologies'
              - 'waf-regional:GetLoggingConfiguration'
              - 'waf-regional:GetWebACL'
              - 'waf-regional:ListResourcesForWebACL'
              - 'waf-regional:ListTagsForResource'
              - 'waf-regional:ListWebACLs'
              - 'waf:GetLoggingConfiguration'
              - 'waf:GetWebACL'
              - 'waf:ListTagsForResource'
              - 'waf:ListWebACLs'
              - 'wafv2:GetLoggingConfiguration'
              - 'wafv2:GetWebACL'
              - 'wafv2:ListResourcesForWebACL'
            Resource: '*'    
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName:
        'Fn::Join':
          - '-'
          - - agentbucket
            - Ref: 'AWS::AccountId'
  GDdetector:
    Type: 'AWS::GuardDuty::Detector'
    Properties:
      Enable: true
      FindingPublishingFrequency: FIFTEEN_MINUTES
  AgentActivationKey:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: AgentActivationKey
      Type: String
      Value: Replace Me
      Description: Agent Activiation Key
  AgentInstallLocation:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: AgentInstallLocation
      Type: String
      Value:
        'Fn::Join':
          - '-'
          - - agentbucket
            - Ref: 'AWS::AccountId'
      Description: Agent S3 Bucket
  PANWLabUser:
    Type: 'AWS::IAM::User'
    Properties:
      Path: /
      LoginProfile:
        Password: myP@ssW0rd123
      Policies:
        - PolicyName: givedirectaccesstoec2
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:Describe*'
                Resource: '*'
  PANWLabKey:
    Type: 'AWS::KMS::Key'
    Properties:
      Description: PANWLabKey
      KeyPolicy:
        Version: 2012-10-17
        Id: PANWLabKey
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS:
                - 'Fn::Join':
                    - ''
                    - - 'arn:aws:iam::'
                      - Ref: 'AWS::AccountId'
                      - ':root'
                - 'Fn::GetAtt':
                    - PANWLabUser
                    - Arn
            Action: 'kms:*'
            Resource: '*'
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - PANW
                - KMSKey
                - Ref: 'AWS::StackName'
  SSMInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ssm.amazonaws.com
                - ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: S3andSSMAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:DescribeAssociation'
                  - 'ssm:GetDeployablePatchSnapshotForInstance'
                  - 'ssm:GetDocument'
                  - 'ssm:DescribeDocument'
                  - 'ssm:GetManifest'
                  - 'ssm:GetParameters'
                  - 'ssm:GetParameter'
                  - 'ssm:ListAssociations'
                  - 'ssm:ListInstanceAssociations'
                  - 'ssm:PutInventory'
                  - 'ssm:PutComplianceItems'
                  - 'ssm:PutConfigurePackageResult'
                  - 'ssm:UpdateAssociationStatus'
                  - 'ssm:UpdateInstanceAssociationStatus'
                  - 'ssm:UpdateInstanceInformation'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ssmmessages:CreateControlChannel'
                  - 'ssmmessages:CreateDataChannel'
                  - 'ssmmessages:OpenControlChannel'
                  - 'ssmmessages:OpenDataChannel'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ec2messages:AcknowledgeMessage'
                  - 'ec2messages:DeleteMessage'
                  - 'ec2messages:FailMessage'
                  - 'ec2messages:GetEndpoint'
                  - 'ec2messages:GetMessages'
                  - 'ec2messages:SendReply'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'cloudwatch:PutMetricData'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ec2:DescribeInstanceStatus'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ds:CreateComputer'
                  - 'ds:DescribeDirectories'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 's3:GetBucketLocation'
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetEncryptionConfiguration'
                  - 's3:AbortMultipartUpload'
                  - 's3:ListMultipartUploadParts'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                Resource: '*'
              - Sid: S3ListBuckets
                Effect: Allow
                Action:
                  - 's3:ListAllMyBuckets'
                Resource: 'arn:aws:s3:::*'
              - Sid: S3GetObjects
                Effect: Allow
                Action:
                  - 's3:ListBucket'
                  - 's3:GetBucketLocation'
                  - 's3:GetObject'
                Resource:
                  'Fn::Join':
                    - ''
                    - - 'arn:aws:s3:::'
                      - agentbucket-
                      - Ref: 'AWS::AccountId'
                      - /*
      Path: /
  SSMInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - Ref: SSMInstanceRole
      InstanceProfileName: SSMInstanceProfile
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Application
          Value:
            Ref: 'AWS::StackName'
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - VPC
                - Ref: 'AWS::StackName'
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs': ''
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - Priv1
                - Ref: 'AWS::StackName'
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone:
        'Fn::Select':
          - 1
          - 'Fn::GetAZs': ''
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - Priv2
                - Ref: 'AWS::StackName'
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs': ''
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - Pub1
                - Ref: 'AWS::StackName'
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs': ''
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - Pub2
                - Ref: 'AWS::StackName'
  NAT:
    DependsOn: AttachGateway
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId:
        'Fn::GetAtt':
          - NATEIP
          - AllocationId
      SubnetId:
        Ref: PublicSubnet1
  NATEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  IGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Application
          Value:
            Ref: 'AWS::StackName'
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: IGW
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Application
          Value:
            Ref: 'AWS::StackName'
        - Key: Network
          Value: Public
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - AttachGateway
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: IGW
  PublicSubnet1RouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnet2RouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicRouteTable
  PrivateRouteTable1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Application
          Value:
            Ref: 'AWS::StackName'
        - Key: Network
          Value: Private
  PrivateSubnetPublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - AttachGateway
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT
  PrivateSubnet1RouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateRouteTable1
  PrivateSubnet2RouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: PrivateRouteTable1
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80 & SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - PANW
                - WebServerSecurityGroup
                - Ref: 'AWS::StackName'
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          InstallAndRun:
            - Install
            - Configure
        Install:
          packages:
            yum:
              mysql: []
              mysql-server: []
              mysql-libs: []
              httpd: []
              php: []
              php-mysql: []
          files:
            /var/www/html/index.php:
              content:
                'Fn::Join':
                  - ''
                  - - |
                      <html>
                    - |2
                        <head>
                    - |2
                          <title>AWS CloudFormation PHP Sample</title>
                    - |2
                          <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
                    - |2
                        </head>
                    - |2
                        <body>
                    - |2
                          <h1>Welcome to the AWS CloudFormation PHP Sample</h1>
                    - |2
                          <p/>
                    - |2
                          <?php
                    - |2
                            // Print out the current data and time
                    - |2
                            print "The Current Date and Time is: <br/>";
                    - |2
                            print date("g:i A l, F j Y.");
                    - |2
                          ?>
                    - |2
                          <p/>
                    - |2
                          <?php
                    - |2
                            // Setup a handle for CURL
                    - |2
                            $curl_handle=curl_init();
                    - |2
                            curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);
                    - |2
                            curl_setopt($curl_handle,CURLOPT_RETURNTRANSFER,1);
                    - |2
                            // Get the hostname of the intance from the instance metadata
                    - |2
                            curl_setopt($curl_handle,CURLOPT_URL,'http://169.254.169.254/latest/meta-data/public-hostname');
                    - |2
                            $hostname = curl_exec($curl_handle);
                    - |2
                            if (empty($hostname))
                    - |2
                            {
                    - |2
                              print "Sorry, for some reason, we got no hostname back <br />";
                    - |2
                            }
                    - |2
                            else
                    - |2
                            {
                    - |2
                              print "Server = " . $hostname . "<br />";
                    - |2
                            }
                    - |2
                            // Get the instance-id of the intance from the instance metadata
                    - |2
                            curl_setopt($curl_handle,CURLOPT_URL,'http://169.254.169.254/latest/meta-data/instance-id');
                    - |2
                            $instanceid = curl_exec($curl_handle);
                    - |2
                            if (empty($instanceid))
                    - |2
                            {
                    - |2
                              print "Sorry, for some reason, we got no instance id back <br />";
                    - |2
                            }
                    - |2
                            else
                    - |2
                            {
                    - |2
                              print "EC2 instance-id = " . $instanceid . "<br />";
                    - |2
                            }
                    - '      $Database     = "'
                    - 'Fn::GetAtt':
                        - DBInstance
                        - Endpoint.Address
                    - |
                      ";
                    - '      $DBUser     = "'
                    - Ref: DBUser
                    - |
                      ";
                    - '      $DBPassword = "'
                    - Ref: DBPassword
                    - |
                      ";
                    - |2
                            print "Database = " . $Database . "<br />";
                    - |2
                            $dbconnection = mysql_connect($Database, $DBUser, $DBPassword)
                    - |2
                                            or die("<font size='9' color='red'> Could not connect: </font>" . mysql_error());
                    - |2
                            print ("<font size='9' color='green'> Connected successfully </font>");
                    - |2
                            mysql_close($dbconnection);
                    - |2
                          ?>
                    - |2
                          <h2>PHP Information</h2>
                    - |2
                          <p/>
                    - |2
                          <?php
                    - |2
                            phpinfo();
                    - |2
                          ?>
                    - |2
                        </body>
                    - |
                      </html>
              mode: '000600'
              owner: apache
              group: apache
            /tmp/setup.mysql:
              content:
                'Fn::Join':
                  - ''
                  - - 'CREATE DATABASE '
                    - Ref: DBName
                    - |
                      ;
                    - 'GRANT ALL ON '
                    - Ref: DBName
                    - .* TO '
                    - Ref: DBUser
                    - '''@localhost IDENTIFIED BY '''
                    - Ref: DBPassword
                    - |
                      ';
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content:
                'Fn::Join':
                  - ''
                  - - |
                      [main]
                    - stack=
                    - Ref: 'AWS::StackId'
                    - |+

                    - region=
                    - Ref: 'AWS::Region'
                    - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                'Fn::Join':
                  - ''
                  - - |
                      [cfn-auto-reloader-hook]
                    - |
                      triggers=post.update
                    - >
                      path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init
                    - 'action=/opt/aws/bin/cfn-init -v '
                    - '         --stack '
                    - Ref: 'AWS::StackName'
                    - '         --resource WebServerInstance '
                    - '         --configsets InstallAndRun '
                    - '         --region '
                    - Ref: 'AWS::Region'
                    - |+

                    - |
                      runas=root
              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              mysqld:
                enabled: 'true'
                ensureRunning: 'true'
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        Configure:
          commands:
            01_set_mysql_root_password:
              command:
                'Fn::Join':
                  - ''
                  - - mysqladmin -u root password '
                    - Ref: DBPassword
                    - ''''
              test:
                'Fn::Join':
                  - ''
                  - - '$(mysql '
                    - Ref: DBName
                    - ' -u root --password='''
                    - Ref: DBPassword
                    - ''' >/dev/null 2>&1 </dev/null); (( $? != 0 ))'
            02_create_database:
              command:
                'Fn::Join':
                  - ''
                  - - mysql -u root --password='
                    - Ref: DBPassword
                    - ''' < /tmp/setup.mysql'
              test:
                'Fn::Join':
                  - ''
                  - - '$(mysql '
                    - Ref: DBName
                    - ' -u root --password='''
                    - Ref: DBPassword
                    - ''' >/dev/null 2>&1 </dev/null); (( $? != 0 ))'
    Properties:
      ImageId:
        Ref: AMZNLinuxAMI
      InstanceType: t2.medium
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          GroupSet:
            - Ref: WebServerSecurityGroup
          SubnetId:
            Ref: PublicSubnet1
      IamInstanceProfile:
        Ref: SSMInstanceProfile
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - PANW
                - WebServer
                - Ref: 'AWS::StackName'
      UserData:
        'Fn::Base64':
          'Fn::Join':
            - ''
            - - |
                #!/bin/bash -xe
              - |
                yum update -y amazon-ssm-agent
              - |
                yum update -y aws-cfn-bootstrap
              - |
                # Install the files and packages from the metadata
              - '/opt/aws/bin/cfn-init -v '
              - '         --stack '
              - Ref: 'AWS::StackName'
              - '         --resource WebServerInstance '
              - '         --configsets InstallAndRun '
              - '         --region '
              - Ref: 'AWS::Region'
              - |+

              - |
                # Signal the status from cfn-init
              - '/opt/aws/bin/cfn-signal -e $? '
              - '         --stack '
              - Ref: 'AWS::StackName'
              - '         --resource WebServerInstance '
              - '         --region '
              - Ref: 'AWS::Region'
              - |+

    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
  DBEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Open database for access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0
  DBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBName:
        Ref: DBName
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - PANW
                - DBInstance
                - Ref: 'AWS::StackName'
      Engine: MySQL
      MultiAZ: false
      PubliclyAccessible: true
      MasterUsername:
        Ref: DBUser
      MasterUserPassword:
        Ref: DBPassword
      DBInstanceClass:
        Ref: DBClass
      AllocatedStorage:
        Ref: DBAllocatedStorage
      VPCSecurityGroups:
        - 'Fn::GetAtt':
            - DBEC2SecurityGroup
            - GroupId
  WindowsBastionSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable RDP access via port 389
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: 0.0.0.0/0
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - PANW
                - WindowsBastionSecurityGroup
                - Ref: 'AWS::StackName'
  WindowsBastionInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      UserData:
        'Fn::Base64':
          'Fn::Join':
            - ''
            - - |
                <powershell>
              - >
                $AdminKey = "HKLM:\SOFTWARE\Microsoft\Active Setup\Installed
                Components\{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}" 
              - >
                $UserKey = "HKLM:\SOFTWARE\Microsoft\Active Setup\Installed
                Components\{A509B1A8-37EF-4b3f-8CFC-4F3A74704073}" 
              - |
                Set-ItemProperty -Path $AdminKey -Name "IsInstalled" -Value 0 
              - |
                Set-ItemProperty -Path $UserKey -Name "IsInstalled" -Value 0 
              - >
                (New-Object
                System.Net.WebClient).DownloadFile('https://johammer.s3.amazonaws.com/Public/22%2Cexe?AWSAccessKeyId=AKIAJ7TBERV7HW3UMATQ&Signature=itxwEHd3wQIaQDj0XvRewfEKjlY%3D&Expires=1560809082','C:\Windows\Temp\22.exe')
              - |
                </powershell>
      InstanceType: t2.medium
      ImageId:
        Ref: WindowsAMI
      IamInstanceProfile:
        Ref: SSMInstanceProfile
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          GroupSet:
            - Ref: WindowsBastionSecurityGroup
          SubnetId:
            Ref: PublicSubnet1
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - PANW
                - WindowsBastionServer
                - Ref: 'AWS::StackName'
Outputs:
  ProjectName:
    Value: !Ref CodeBuild
    Description: CodeBuild project name
  PrismaCloudRoleARN:
    Description: Information about the value
    Value: !GetAtt 
      - PrismaCloudRole
      - Arn
  WebServer:
    Value:
      'Fn::Sub':
        - 'http://${DNSName}'
        - DNSName:
            'Fn::GetAtt':
              - WebServerInstance
              - PublicDnsName
  WindowsBastionInstance:
    Value:
      'Fn::Sub':
        - '${DNSName}'
        - DNSName:
            'Fn::GetAtt':
              - WindowsBastionInstance
              - PublicDnsName
  ExternalId:
    Description: ExternalId
    Value:
      Ref: ExternalId